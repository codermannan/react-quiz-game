{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\class5\\\\quiz-apps\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport QuestionCard from './components/QuestionCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [quizzes, setQuizzes] = useState(null);\n  const [loaded, setLoaded] = useState(false);\n  const [startQuiz, setStartQuiz] = useState(false);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [currentAnswer, setCurrentAnswer] = useState(null); //console.log(currentQuestionIndex);\n\n  const fetchQuiz = async () => {\n    const res = await fetch(\"https://opentdb.com/api.php?amount=5&category=18&difficulty=easy&type=multiple\");\n    const {\n      results\n    } = await res.json(); //console.log(results);\n\n    setQuizzes(results);\n    const initialQuestion = results[currentQuestionIndex];\n    const answers = [initialQuestion.correct_answer, ...initialQuestion.incorrect_answers];\n    console.log(\"answers\", answers);\n    setCurrentAnswer(answers);\n    console.log(\"cccccccccurrentAnswer\", currentAnswer);\n    setStartQuiz(true);\n    setLoaded(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!startQuiz && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchQuiz,\n      children: \"Start Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: loaded && /*#__PURE__*/_jsxDEV(QuestionCard, {\n        quiz: quizzes[currentQuestionIndex],\n        currentAnswer: currentAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"v2n9XvH1y5G/by8al4gMS25PBXI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","QuestionCard","App","quizzes","setQuizzes","loaded","setLoaded","startQuiz","setStartQuiz","currentQuestionIndex","setCurrentQuestionIndex","currentAnswer","setCurrentAnswer","fetchQuiz","res","fetch","results","json","initialQuestion","answers","correct_answer","incorrect_answers","console","log"],"sources":["E:/react/class5/quiz-apps/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport QuestionCard from './components/QuestionCard';\n\nfunction App() {\n\n  const [quizzes, setQuizzes] = useState(null);\n  const [loaded,setLoaded] = useState(false);\n  const [startQuiz,setStartQuiz] = useState(false);\n  const [currentQuestionIndex,setCurrentQuestionIndex] = useState(0);\n  const [currentAnswer,setCurrentAnswer] = useState(null);\n\n  //console.log(currentQuestionIndex);\n  const fetchQuiz = async () => {\n      const res = await fetch(\"https://opentdb.com/api.php?amount=5&category=18&difficulty=easy&type=multiple\");\n      const { results } = await res.json();\n      //console.log(results);\n      setQuizzes(results);\n\n      const initialQuestion  = results[currentQuestionIndex];\n      const answers = [initialQuestion.correct_answer,\n      ...initialQuestion.incorrect_answers\n      ];\n      console.log(\"answers\",answers);\n      setCurrentAnswer(answers);\n      console.log(\"cccccccccurrentAnswer\",currentAnswer);\n      setStartQuiz(true);\n      setLoaded(true);\n  }\n\n  return (\n    <>\n      { !startQuiz &&\n      <button onClick={fetchQuiz}>Start Quiz</button>\n      }\n      <div className='container'>\n        {loaded &&  <QuestionCard quiz={quizzes[currentQuestionIndex]} currentAnswer={currentAnswer}/>}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACK,MAAD,EAAQC,SAAR,IAAqBN,QAAQ,CAAC,KAAD,CAAnC;EACA,MAAM,CAACO,SAAD,EAAWC,YAAX,IAA2BR,QAAQ,CAAC,KAAD,CAAzC;EACA,MAAM,CAACS,oBAAD,EAAsBC,uBAAtB,IAAiDV,QAAQ,CAAC,CAAD,CAA/D;EACA,MAAM,CAACW,aAAD,EAAeC,gBAAf,IAAmCZ,QAAQ,CAAC,IAAD,CAAjD,CANa,CAQb;;EACA,MAAMa,SAAS,GAAG,YAAY;IAC1B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,gFAAD,CAAvB;IACA,MAAM;MAAEC;IAAF,IAAc,MAAMF,GAAG,CAACG,IAAJ,EAA1B,CAF0B,CAG1B;;IACAb,UAAU,CAACY,OAAD,CAAV;IAEA,MAAME,eAAe,GAAIF,OAAO,CAACP,oBAAD,CAAhC;IACA,MAAMU,OAAO,GAAG,CAACD,eAAe,CAACE,cAAjB,EAChB,GAAGF,eAAe,CAACG,iBADH,CAAhB;IAGAC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBJ,OAAtB;IACAP,gBAAgB,CAACO,OAAD,CAAhB;IACAG,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAoCZ,aAApC;IACAH,YAAY,CAAC,IAAD,CAAZ;IACAF,SAAS,CAAC,IAAD,CAAT;EACH,CAfD;;EAiBA,oBACE;IAAA,WACI,CAACC,SAAD,iBACF;MAAQ,OAAO,EAAEM,SAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAIE;MAAK,SAAS,EAAC,WAAf;MAAA,UACGR,MAAM,iBAAK,QAAC,YAAD;QAAc,IAAI,EAAEF,OAAO,CAACM,oBAAD,CAA3B;QAAmD,aAAa,EAAEE;MAAlE;QAAA;QAAA;QAAA;MAAA;IADd;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA,gBADF;AAUD;;GApCQT,G;;KAAAA,G;AAsCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}