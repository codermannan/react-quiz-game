{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\class5\\\\quiz-apps\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport QuestionCard from './components/QuestionCard';\nimport shuffle from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [quizzes, setQuizzes] = useState(null);\n  const [loaded, setLoaded] = useState(false);\n  const [startQuiz, setStartQuiz] = useState(false);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [currentAnswers, setCurrentAnswers] = useState(null);\n  const [endGame, setEndGame] = useState(false);\n  const [totalScore, setTotalScore] = useState(0);\n  const [correctAnswer, setCorrectAnswer] = useState(null);\n\n  const navigateNext = () => {\n    let currentQuizIndex = currentQuestionIndex + 1;\n    const validQuestionIndex = currentQuizIndex < quizzes.length; //console.log(\"prevIndex\",currentQuizIndex);\n\n    if (validQuestionIndex) {\n      setCurrentQuestionIndex(currentQuizIndex); //console.log(\"currentQuestionIndex\",currentQuestionIndex);\n\n      const nextAnswer = quizzes[currentQuizIndex]; //console.log(\"nextAnswer\",nextAnswer);\n\n      setCurrentAnswers(shuffle(nextAnswer));\n      setCorrectAnswer(nextAnswer.correct_answer);\n    } else {\n      setEndGame(true);\n    }\n  }; //console.log(currentQuestionIndex);\n\n\n  const fetchQuiz = async () => {\n    const res = await fetch(\"https://opentdb.com/api.php?amount=5&category=18&difficulty=easy&type=multiple\");\n    const {\n      results\n    } = await res.json();\n    console.log(results);\n    setQuizzes(results);\n    const initialQuestion = results[currentQuestionIndex]; //const answers = [initialQuestion.correct_answer,\n    // ...initialQuestion.incorrect_answers\n    //];\n    //////console.log(\"answers\",answers);\n\n    setCurrentAnswers(shuffle(initialQuestion));\n    setCorrectAnswer(initialQuestion.correct_answer); //console.log(\"cccccccccurrentAnswer\",currentAnswers);\n\n    setStartQuiz(true);\n    setLoaded(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [endGame && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Its time to show data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }, this), !startQuiz && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchQuiz,\n      style: {\n        display: 'block',\n        margin: '200px auto'\n      },\n      children: \"Start Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: loaded && !endGame && /*#__PURE__*/_jsxDEV(QuestionCard, {\n        quiz: quizzes[currentQuestionIndex],\n        currentAnswers: currentAnswers,\n        currentQuestionIndex: currentQuestionIndex,\n        quizzes: quizzes,\n        navigateNext: navigateNext\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"EEYXSEcajJoUvdRApMJZBOCAh7M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","QuestionCard","shuffle","App","quizzes","setQuizzes","loaded","setLoaded","startQuiz","setStartQuiz","currentQuestionIndex","setCurrentQuestionIndex","currentAnswers","setCurrentAnswers","endGame","setEndGame","totalScore","setTotalScore","correctAnswer","setCorrectAnswer","navigateNext","currentQuizIndex","validQuestionIndex","length","nextAnswer","correct_answer","fetchQuiz","res","fetch","results","json","console","log","initialQuestion","display","margin"],"sources":["E:/react/class5/quiz-apps/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport QuestionCard from './components/QuestionCard';\nimport shuffle from './utils';\n\n\nfunction App() {\n\n  const [quizzes, setQuizzes] = useState(null);\n  const [loaded,setLoaded] = useState(false);\n  const [startQuiz,setStartQuiz] = useState(false);\n  const [currentQuestionIndex,setCurrentQuestionIndex] = useState(0);\n  const [currentAnswers,setCurrentAnswers] = useState(null);\n  const [endGame,setEndGame] = useState(false);\n  const [totalScore,setTotalScore] = useState(0);\n  const [correctAnswer,setCorrectAnswer] = useState(null);\n\n  const navigateNext = () =>{\n    let currentQuizIndex = currentQuestionIndex + 1;\n    const validQuestionIndex = currentQuizIndex < quizzes.length;\n    //console.log(\"prevIndex\",currentQuizIndex);\n    if(validQuestionIndex){\n      setCurrentQuestionIndex(currentQuizIndex)\n      //console.log(\"currentQuestionIndex\",currentQuestionIndex);\n      const nextAnswer = quizzes[currentQuizIndex]\n      //console.log(\"nextAnswer\",nextAnswer);\n      setCurrentAnswers(shuffle(nextAnswer));\n      setCorrectAnswer(nextAnswer.correct_answer);\n    }else{\n      setEndGame(true);\n    }\n    \n  }\n\n  //console.log(currentQuestionIndex);\n  const fetchQuiz = async () => {\n      const res         = await fetch(\"https://opentdb.com/api.php?amount=5&category=18&difficulty=easy&type=multiple\");\n      const { results } = await res.json();\n      console.log(results);\n      setQuizzes(results);\n\n      const initialQuestion  = results[currentQuestionIndex];\n      //const answers = [initialQuestion.correct_answer,\n     // ...initialQuestion.incorrect_answers\n      //];\n      //////console.log(\"answers\",answers);\n      setCurrentAnswers(shuffle(initialQuestion));\n      setCorrectAnswer(initialQuestion.correct_answer);\n      //console.log(\"cccccccccurrentAnswer\",currentAnswers);\n      setStartQuiz(true);\n      setLoaded(true);\n  }\n\n  return (\n    <>\n      {endGame && <p>Its time to show data</p>}\n      { !startQuiz &&\n      <button onClick={fetchQuiz} style={{display:'block',margin:'200px auto'}}>Start Quiz</button>\n      }\n      <div className='container'>\n        {loaded && !endGame &&\n        <QuestionCard \n          quiz={quizzes[currentQuestionIndex]} \n          currentAnswers={currentAnswers}\n          currentQuestionIndex={currentQuestionIndex}\n          quizzes={quizzes}\n          navigateNext={navigateNext}\n        />\n        }\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,OAAP,MAAoB,SAApB;;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACM,MAAD,EAAQC,SAAR,IAAqBP,QAAQ,CAAC,KAAD,CAAnC;EACA,MAAM,CAACQ,SAAD,EAAWC,YAAX,IAA2BT,QAAQ,CAAC,KAAD,CAAzC;EACA,MAAM,CAACU,oBAAD,EAAsBC,uBAAtB,IAAiDX,QAAQ,CAAC,CAAD,CAA/D;EACA,MAAM,CAACY,cAAD,EAAgBC,iBAAhB,IAAqCb,QAAQ,CAAC,IAAD,CAAnD;EACA,MAAM,CAACc,OAAD,EAASC,UAAT,IAAuBf,QAAQ,CAAC,KAAD,CAArC;EACA,MAAM,CAACgB,UAAD,EAAYC,aAAZ,IAA6BjB,QAAQ,CAAC,CAAD,CAA3C;EACA,MAAM,CAACkB,aAAD,EAAeC,gBAAf,IAAmCnB,QAAQ,CAAC,IAAD,CAAjD;;EAEA,MAAMoB,YAAY,GAAG,MAAK;IACxB,IAAIC,gBAAgB,GAAGX,oBAAoB,GAAG,CAA9C;IACA,MAAMY,kBAAkB,GAAGD,gBAAgB,GAAGjB,OAAO,CAACmB,MAAtD,CAFwB,CAGxB;;IACA,IAAGD,kBAAH,EAAsB;MACpBX,uBAAuB,CAACU,gBAAD,CAAvB,CADoB,CAEpB;;MACA,MAAMG,UAAU,GAAGpB,OAAO,CAACiB,gBAAD,CAA1B,CAHoB,CAIpB;;MACAR,iBAAiB,CAACX,OAAO,CAACsB,UAAD,CAAR,CAAjB;MACAL,gBAAgB,CAACK,UAAU,CAACC,cAAZ,CAAhB;IACD,CAPD,MAOK;MACHV,UAAU,CAAC,IAAD,CAAV;IACD;EAEF,CAfD,CAXa,CA4Bb;;;EACA,MAAMW,SAAS,GAAG,YAAY;IAC1B,MAAMC,GAAG,GAAW,MAAMC,KAAK,CAAC,gFAAD,CAA/B;IACA,MAAM;MAAEC;IAAF,IAAc,MAAMF,GAAG,CAACG,IAAJ,EAA1B;IACAC,OAAO,CAACC,GAAR,CAAYH,OAAZ;IACAxB,UAAU,CAACwB,OAAD,CAAV;IAEA,MAAMI,eAAe,GAAIJ,OAAO,CAACnB,oBAAD,CAAhC,CAN0B,CAO1B;IACD;IACC;IACA;;IACAG,iBAAiB,CAACX,OAAO,CAAC+B,eAAD,CAAR,CAAjB;IACAd,gBAAgB,CAACc,eAAe,CAACR,cAAjB,CAAhB,CAZ0B,CAa1B;;IACAhB,YAAY,CAAC,IAAD,CAAZ;IACAF,SAAS,CAAC,IAAD,CAAT;EACH,CAhBD;;EAkBA,oBACE;IAAA,WACGO,OAAO,iBAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADd,EAEI,CAACN,SAAD,iBACF;MAAQ,OAAO,EAAEkB,SAAjB;MAA4B,KAAK,EAAE;QAACQ,OAAO,EAAC,OAAT;QAAiBC,MAAM,EAAC;MAAxB,CAAnC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAKE;MAAK,SAAS,EAAC,WAAf;MAAA,UACG7B,MAAM,IAAI,CAACQ,OAAX,iBACD,QAAC,YAAD;QACE,IAAI,EAAEV,OAAO,CAACM,oBAAD,CADf;QAEE,cAAc,EAAEE,cAFlB;QAGE,oBAAoB,EAAEF,oBAHxB;QAIE,OAAO,EAAEN,OAJX;QAKE,YAAY,EAAEgB;MALhB;QAAA;QAAA;QAAA;MAAA;IAFF;MAAA;MAAA;MAAA;IAAA,QALF;EAAA,gBADF;AAmBD;;GAlEQjB,G;;KAAAA,G;AAoET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}